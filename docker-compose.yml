version: '3.8'

services:
  back: # Go
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    environment:
      - DB_CLIENT=redis
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_DATABASES=${REDIS_DATABASES}
#      - DB_CLIENT=mysql
#      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
#      - MYSQL_DATABASE=${MYSQL_DATABASE}
#      - MYSQL_USER=${MYSQL_USER}
#      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    depends_on:
      - redis
#      - mysql
    networks:
      - app-network

  front: # Vue
    build: web/front
    networks:
      - app-network

  redis:
    image: "redis:alpine"
    restart: always
    command: redis-server --requirepass ${REDIS_PASSWORD}
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_DATABASES=${REDIS_DATABASES}
    networks:
      - app-network

#  mysql:
#    image: "mysql:latest"
#    restart: always
#    environment:
#      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
#      - MYSQL_DATABASE=${MYSQL_DATABASE}
#      - MYSQL_USER=${MYSQL_USER}
#      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
#    networks:
#      - app-network

#  phpmyadmin: # only debug
#    image: phpmyadmin
#    restart: always
#    ports:
#      - "8085:80"
#    environment:
#      - PMA_ARBITRARY=1
#    networks:
#      - app-network

  proxy: # Nginx
    build: ./web/proxy
    restart: always
    ports:
      - "8080:80"
    depends_on:
      - front
      - back
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
